{"version":3,"sources":["webpack:///static/js/22.28829e4aefaa2082bf4a.js","webpack:///./src/api/lib/helper/javascriptDatatypeConvert.js?a9eb****","webpack:///../~/.1.0.0@reconnectingwebsocket/reconnecting-websocket.js?14ba****","webpack:///./src/components/test/websocket.vue?6b90","webpack:///./src/components/test/websocket.vue?c736","webpack:///./src/components/test/websocket.vue?87f0","webpack:///./src/components/test/websocket.vue?0e56","webpack:///./src/api/socket_client.js","webpack:///./src/components/test/websocket.vue"],"names":["webpackJsonp","60","module","exports","String2Blob","str","blob","Blob","type","TypeArray2Blob","typearray","reader","FileReader","readAsText","onload","e","console","info","result","Blob2String","Blob2ArrayBuffer","readAsArrayBuffer","Object","defineProperty","value","62","__webpack_require__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","apply","undefined","this","ReconnectingWebSocket","url","protocols","options","generateEvent","s","args","evt","document","createEvent","initCustomEvent","settings","debug","automaticOpen","reconnectInterval","maxReconnectInterval","reconnectDecay","timeoutInterval","maxReconnectAttempts","key","reconnectAttempts","readyState","WebSocket","CONNECTING","protocol","ws","self","forcedClose","timedOut","eventTarget","createElement","addEventListener","event","onopen","onclose","onconnecting","onmessage","onerror","bind","removeEventListener","dispatchEvent","open","reconnectAttempt","debugAll","localWs","timeout","setTimeout","close","clearTimeout","OPEN","isReconnect","CLOSED","code","reason","wasClean","Math","pow","data","send","refresh","window","prototype","CLOSING","584","push","id","version","sources","names","mappings","file","sourceRoot","646","content","locals","776","Component","832","render","_vm","_h","$createElement","_c","_self","staticStyle","text-align","staticClass","attrs","on","click","socket_init","_v","disconnect","width","height","margin-left","transform","for","directives","name","rawName","yaf","expression","domProps","input","$event","target","composing","controller","action","_s","socket_response","staticRenderFns","1312","jQuery","_interopRequireDefault","obj","__esModule","default","_stringify","_stringify2","_javascriptDatatypeConvert","_reconnectingwebsocket","_reconnectingwebsocket2","SOCKET_CLIENT","wSock","to","message","payload","wsserver","response","this_vue","conn_status","status","check_socket_status","init","unique_auth_code","arguments","length","copyright","log","clearInterval","wsOpen","wsMessage","wsOnclose","wsOnerror","wsSend","send_blob","wsClose","that","print","$root","eventHub","$emit","datastr","response_data","parseJSON","flag","loopCheckStatus","call","1376","_socket_client","_socket_client2","mounted","vm","$on","computed","methods","params","payload_type","payload_data"],"mappings":"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","file":"static/js/22.28829e4aefaa2082bf4a.js","sourcesContent":["webpackJsonp([22,54],{\n\n/***/ 60:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.String2Blob = String2Blob;\n\texports.TypeArray2Blob = TypeArray2Blob;\n\texports.Blob2String = Blob2String;\n\texports.Blob2ArrayBuffer = Blob2ArrayBuffer;\n\tfunction String2Blob(str) {\n\t    var blob = new Blob([str], {\n\t        type: 'text/plain'\n\t    });\n\t    return blob;\n\t}\n\tfunction TypeArray2Blob(typearray) {\n\t    var blob = new Blob(typearray);\n\t\n\t    var reader = new FileReader();\n\t    reader.readAsText(blob, 'utf-8');\n\t    reader.onload = function (e) {\n\t        console.info(reader.result);\n\t        return reader.result;\n\t    };\n\t}\n\tfunction Blob2String(blob) {\n\t    var reader = new FileReader();\n\t    reader.readAsText(blob, 'utf-8');\n\t    reader.onload = function (e) {\n\t        console.info(reader.result);\n\t        return reader.result;\n\t    };\n\t}\n\t\n\tfunction Blob2ArrayBuffer(blob) {\n\t    var reader = new FileReader();\n\t    reader.readAsArrayBuffer(blob);\n\t    reader.onload = function (e) {\n\t        console.info(reader.result);\n\t        return reader.result;\n\t    };\n\t}\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// MIT License:\n\t//\n\t// Copyright (c) 2010-2012, Joe Walnes\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t\n\t/**\n\t * This behaves like a WebSocket in every way, except if it fails to connect,\n\t * or it gets disconnected, it will repeatedly poll until it successfully connects\n\t * again.\n\t *\n\t * It is API compatible, so when you have:\n\t *   ws = new WebSocket('ws://....');\n\t * you can replace with:\n\t *   ws = new ReconnectingWebSocket('ws://....');\n\t *\n\t * The event stream will typically look like:\n\t *  onconnecting\n\t *  onopen\n\t *  onmessage\n\t *  onmessage\n\t *  onclose // lost connection\n\t *  onconnecting\n\t *  onopen  // sometime later...\n\t *  onmessage\n\t *  onmessage\n\t *  etc...\n\t *\n\t * It is API compatible with the standard WebSocket API, apart from the following members:\n\t *\n\t * - `bufferedAmount`\n\t * - `extensions`\n\t * - `binaryType`\n\t *\n\t * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n\t * - Joe Walnes\n\t *\n\t * Syntax\n\t * ======\n\t * var socket = new ReconnectingWebSocket(url, protocols, options);\n\t *\n\t * Parameters\n\t * ==========\n\t * url - The url you are connecting to.\n\t * protocols - Optional string or array of protocols.\n\t * options - See below\n\t *\n\t * Options\n\t * =======\n\t * Options can either be passed upon instantiation or set after instantiation:\n\t *\n\t * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n\t *\n\t * or\n\t *\n\t * var socket = new ReconnectingWebSocket(url);\n\t * socket.debug = true;\n\t * socket.reconnectInterval = 4000;\n\t *\n\t * debug\n\t * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n\t *\n\t * automaticOpen\n\t * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n\t *\n\t * reconnectInterval\n\t * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n\t *\n\t * maxReconnectInterval\n\t * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n\t *\n\t * reconnectDecay\n\t * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n\t *\n\t * timeoutInterval\n\t * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n\t *\n\t */\n\t(function (global, factory) {\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module !== 'undefined' && module.exports){\n\t        module.exports = factory();\n\t    } else {\n\t        global.ReconnectingWebSocket = factory();\n\t    }\n\t})(this, function () {\n\t\n\t    if (!('WebSocket' in window)) {\n\t        return;\n\t    }\n\t\n\t    function ReconnectingWebSocket(url, protocols, options) {\n\t\n\t        // Default settings\n\t        var settings = {\n\t\n\t            /** Whether this instance should log debug messages. */\n\t            debug: false,\n\t\n\t            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n\t            automaticOpen: true,\n\t\n\t            /** The number of milliseconds to delay before attempting to reconnect. */\n\t            reconnectInterval: 1000,\n\t            /** The maximum number of milliseconds to delay a reconnection attempt. */\n\t            maxReconnectInterval: 30000,\n\t            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n\t            reconnectDecay: 1.5,\n\t\n\t            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n\t            timeoutInterval: 2000,\n\t\n\t            /** The maximum number of reconnection attempts to make. Unlimited if null. */\n\t            maxReconnectAttempts: null\n\t        }\n\t        if (!options) { options = {}; }\n\t\n\t        // Overwrite and define settings with options if they exist.\n\t        for (var key in settings) {\n\t            if (typeof options[key] !== 'undefined') {\n\t                this[key] = options[key];\n\t            } else {\n\t                this[key] = settings[key];\n\t            }\n\t        }\n\t\n\t        // These should be treated as read-only properties\n\t\n\t        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n\t        this.url = url;\n\t\n\t        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n\t        this.reconnectAttempts = 0;\n\t\n\t        /**\n\t         * The current state of the connection.\n\t         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n\t         * Read only.\n\t         */\n\t        this.readyState = WebSocket.CONNECTING;\n\t\n\t        /**\n\t         * A string indicating the name of the sub-protocol the server selected; this will be one of\n\t         * the strings specified in the protocols parameter when creating the WebSocket object.\n\t         * Read only.\n\t         */\n\t        this.protocol = null;\n\t\n\t        // Private state variables\n\t\n\t        var self = this;\n\t        var ws;\n\t        var forcedClose = false;\n\t        var timedOut = false;\n\t        var eventTarget = document.createElement('div');\n\t\n\t        // Wire up \"on*\" properties as event handlers\n\t\n\t        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });\n\t        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });\n\t        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });\n\t        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });\n\t        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });\n\t\n\t        // Expose the API required by EventTarget\n\t\n\t        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n\t        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);\n\t        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\t\n\t        /**\n\t         * This function generates an event that is compatible with standard\n\t         * compliant browsers and IE9 - IE11\n\t         *\n\t         * This will prevent the error:\n\t         * Object doesn't support this action\n\t         *\n\t         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n\t         * @param s String The name that the event should use\n\t         * @param args Object an optional object that the event will use\n\t         */\n\t        function generateEvent(s, args) {\n\t        \tvar evt = document.createEvent(\"CustomEvent\");\n\t        \tevt.initCustomEvent(s, false, false, args);\n\t        \treturn evt;\n\t        };\n\t\n\t        this.open = function (reconnectAttempt) {\n\t            ws = new WebSocket(self.url, protocols || []);\n\t\n\t            if (reconnectAttempt) {\n\t                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {\n\t                    return;\n\t                }\n\t            } else {\n\t                eventTarget.dispatchEvent(generateEvent('connecting'));\n\t                this.reconnectAttempts = 0;\n\t            }\n\t\n\t            if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);\n\t            }\n\t\n\t            var localWs = ws;\n\t            var timeout = setTimeout(function() {\n\t                if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);\n\t                }\n\t                timedOut = true;\n\t                localWs.close();\n\t                timedOut = false;\n\t            }, self.timeoutInterval);\n\t\n\t            ws.onopen = function(event) {\n\t                clearTimeout(timeout);\n\t                if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                    console.debug('ReconnectingWebSocket', 'onopen', self.url);\n\t                }\n\t                self.protocol = ws.protocol;\n\t                self.readyState = WebSocket.OPEN;\n\t                self.reconnectAttempts = 0;\n\t                var e = generateEvent('open');\n\t                e.isReconnect = reconnectAttempt;\n\t                reconnectAttempt = false;\n\t                eventTarget.dispatchEvent(e);\n\t            };\n\t\n\t            ws.onclose = function(event) {\n\t                clearTimeout(timeout);\n\t                ws = null;\n\t                if (forcedClose) {\n\t                    self.readyState = WebSocket.CLOSED;\n\t                    eventTarget.dispatchEvent(generateEvent('close'));\n\t                } else {\n\t                    self.readyState = WebSocket.CONNECTING;\n\t                    var e = generateEvent('connecting');\n\t                    e.code = event.code;\n\t                    e.reason = event.reason;\n\t                    e.wasClean = event.wasClean;\n\t                    eventTarget.dispatchEvent(e);\n\t                    if (!reconnectAttempt && !timedOut) {\n\t                        if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                            console.debug('ReconnectingWebSocket', 'onclose', self.url);\n\t                        }\n\t                        eventTarget.dispatchEvent(generateEvent('close'));\n\t                    }\n\t\n\t                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);\n\t                    setTimeout(function() {\n\t                        self.reconnectAttempts++;\n\t                        self.open(true);\n\t                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);\n\t                }\n\t            };\n\t            ws.onmessage = function(event) {\n\t                if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);\n\t                }\n\t                var e = generateEvent('message');\n\t                e.data = event.data;\n\t                eventTarget.dispatchEvent(e);\n\t            };\n\t            ws.onerror = function(event) {\n\t                if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);\n\t                }\n\t                eventTarget.dispatchEvent(generateEvent('error'));\n\t            };\n\t        }\n\t\n\t        // Whether or not to create a websocket upon instantiation\n\t        if (this.automaticOpen == true) {\n\t            this.open(false);\n\t        }\n\t\n\t        /**\n\t         * Transmits data to the server over the WebSocket connection.\n\t         *\n\t         * @param data a text string, ArrayBuffer or Blob to send to the server.\n\t         */\n\t        this.send = function(data) {\n\t            if (ws) {\n\t                if (self.debug || ReconnectingWebSocket.debugAll) {\n\t                    console.debug('ReconnectingWebSocket', 'send', self.url, data);\n\t                }\n\t                return ws.send(data);\n\t            } else {\n\t                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Closes the WebSocket connection or connection attempt, if any.\n\t         * If the connection is already CLOSED, this method does nothing.\n\t         */\n\t        this.close = function(code, reason) {\n\t            // Default CLOSE_NORMAL code\n\t            if (typeof code == 'undefined') {\n\t                code = 1000;\n\t            }\n\t            forcedClose = true;\n\t            if (ws) {\n\t                ws.close(code, reason);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Additional public API method to refresh the connection if still open (close, re-open).\n\t         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n\t         */\n\t        this.refresh = function() {\n\t            if (ws) {\n\t                ws.close();\n\t            }\n\t        };\n\t    }\n\t\n\t    /**\n\t     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n\t     * this indicates that the connection is ready to send and receive data.\n\t     */\n\t    ReconnectingWebSocket.prototype.onopen = function(event) {};\n\t    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n\t    ReconnectingWebSocket.prototype.onclose = function(event) {};\n\t    /** An event listener to be called when a connection begins being attempted. */\n\t    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n\t    /** An event listener to be called when a message is received from the server. */\n\t    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n\t    /** An event listener to be called when an error occurs. */\n\t    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\t\n\t    /**\n\t     * Whether all instances of ReconnectingWebSocket should log debug messages.\n\t     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n\t     */\n\t    ReconnectingWebSocket.debugAll = false;\n\t\n\t    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n\t    ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n\t    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n\t    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\t\n\t    return ReconnectingWebSocket;\n\t});\n\n\n/***/ },\n\n/***/ 584:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(3)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"websocket.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 646:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(584);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../node_modules/.0.25.0@css-loader/index.js?sourceMap!../../../node_modules/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/style-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./websocket.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../node_modules/.0.25.0@css-loader/index.js?sourceMap!../../../node_modules/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/style-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./websocket.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 776:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(646)\n\t\n\tvar Component = __webpack_require__(5)(\n\t  /* script */\n\t  __webpack_require__(1376),\n\t  /* template */\n\t  __webpack_require__(832),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n\n/***/ 832:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticStyle: {\n\t      \"text-align\": \"center\"\n\t    }\n\t  }, [_c('button', {\n\t    staticClass: \"btn btn-default\",\n\t    attrs: {\n\t      \"type\": \"button\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.socket_init\n\t    }\n\t  }, [_vm._v(\"连接socket\")]), _vm._v(\" \"), _c('button', {\n\t    staticClass: \"btn btn-default\",\n\t    attrs: {\n\t      \"type\": \"button\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.disconnect\n\t    }\n\t  }, [_vm._v(\"断开socket\")]), _vm._v(\" \"), (_vm.conn_status) ? _c('input', {\n\t    attrs: {\n\t      \"value\": \"已经连接\"\n\t    }\n\t  }) : _c('input', {\n\t    attrs: {\n\t      \"value\": \"已经断开\"\n\t    }\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticStyle: {\n\t      \"width\": \"800px\",\n\t      \"height\": \"300px\",\n\t      \"margin-left\": \"50%\",\n\t      \"transform\": \"translateX(-50%)\"\n\t    }\n\t  }, [_c('label', {\n\t    attrs: {\n\t      \"for\": \"module\"\n\t    }\n\t  }, [_vm._v(\"module\")]), _c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.yaf.module),\n\t      expression: \"yaf.module\"\n\t    }],\n\t    attrs: {\n\t      \"id\": \"module\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.yaf.module)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.yaf.module = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', {\n\t    attrs: {\n\t      \"for\": \"controller\"\n\t    }\n\t  }, [_vm._v(\"controller\")]), _c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.yaf.controller),\n\t      expression: \"yaf.controller\"\n\t    }],\n\t    attrs: {\n\t      \"id\": \"controller\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.yaf.controller)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.yaf.controller = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', {\n\t    attrs: {\n\t      \"for\": \"action\"\n\t    }\n\t  }, [_vm._v(\"action\")]), _c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.yaf.action),\n\t      expression: \"yaf.action\"\n\t    }],\n\t    attrs: {\n\t      \"id\": \"action\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.yaf.action)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.yaf.action = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('input', {\n\t    attrs: {\n\t      \"id\": \"send\",\n\t      \"value\": \"提交\",\n\t      \"type\": \"button\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.send\n\t    }\n\t  })]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n\t    staticStyle: {\n\t      \"width\": \"800px\",\n\t      \"height\": \"300px\",\n\t      \"margin-left\": \"50%\",\n\t      \"transform\": \"translateX(-50%)\"\n\t    }\n\t  }, [_vm._v(\"\\n          \" + _vm._s(_vm.socket_response) + \"\\n    \")])])\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 1312:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(38);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _javascriptDatatypeConvert = __webpack_require__(60);\n\t\n\tvar _reconnectingwebsocket = __webpack_require__(62);\n\t\n\tvar _reconnectingwebsocket2 = _interopRequireDefault(_reconnectingwebsocket);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SOCKET_CLIENT = {\n\t    data: {\n\t        wSock: null,\n\t        to: '',\n\t        message: null,\n\t        payload: null,\n\t        wsserver: 'ws://iamsee.com:9501',\n\t        response: '',\n\t        this_vue: null,\n\t        conn_status: false,\n\t        status: '暂未连接到服务器',\n\t        check_socket_status: ''\n\t    },\n\t    init: function init() {\n\t        var unique_auth_code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t        this.copyright();\n\t        if (!this.data.conn_status) {\n\t            this.ws(unique_auth_code);\n\t        }\n\t    },\n\t\n\t    ws: function ws(unique_auth_code) {\n\t\n\t        console.log('准备连接到服务器=>');\n\t        clearInterval(this.data.check_socket_status);\n\t\n\t        this.data.wSock = new _reconnectingwebsocket2.default('ws://iamsee.com:9501/?unique_auth_code=' + unique_auth_code);\n\t        this.wsOpen();\n\t        this.wsMessage();\n\t        this.wsOnclose();\n\t        this.wsOnerror();\n\t        if (unique_auth_code) {}\n\t    },\n\t    wsSend: function wsSend() {\n\t        var send_blob = (0, _javascriptDatatypeConvert.String2Blob)((0, _stringify2.default)(this.data.payload));\n\t\n\t        this.data.wSock.send(send_blob);\n\t    },\n\t    wsClose: function wsClose() {\n\t\n\t        console.log('关闭连接');\n\t        this.data.wSock.close();\n\t    },\n\t    wsOpen: function wsOpen() {\n\t        var that = this;\n\t        this.data.wSock.onopen = function (event) {\n\t            that.data.status = '连接正常';\n\t            that.data.conn_status = true;\n\t            SOCKET_CLIENT.print('wsopen', event);\n\t            that.data.this_vue.$root.eventHub.$emit('conn_status', that.data.conn_status);\n\t        };\n\t    },\n\t    wsMessage: function wsMessage() {\n\t\n\t        var that = this;\n\t        this.data.wSock.onmessage = function (event) {\n\t            var reader = new FileReader();\n\t            reader.readAsText(event.data, 'utf-8');\n\t            reader.onload = function (e) {\n\t                event.datastr = reader.result;\n\t                var response_data = jQuery.parseJSON(event.datastr);\n\t                var status = response_data.status;\n\t                var type = response_data.type;\n\t\n\t                that.data.this_vue.$root.eventHub.$emit('socket_response', response_data);\n\t            };\n\t        };\n\t    },\n\t    wsOnclose: function wsOnclose() {\n\t        var that = this;\n\t\n\t        this.data.wSock.onclose = function (event) {\n\t            console.log('[c]close=>');\n\t            console.log(event);\n\t            that.data.conn_status = false;\n\t            that.data.this_vue.$root.eventHub.$emit('conn_status', that.data.conn_status);\n\t        };\n\t    },\n\t    wsOnerror: function wsOnerror() {\n\t        this.data.wSock.onerror = function (event) {\n\t            console.log('[c]error=>');\n\t            console.log(event);\n\t        };\n\t    },\n\t\n\t    print: function print(flag, obj) {\n\t        console.log('----' + flag + ' start-------');\n\t        console.log(obj);\n\t        console.log('----' + flag + ' end-------');\n\t    },\n\t    copyright: function copyright() {\n\t        if (this.data.status !== '连接正常') {\n\t            this.data.status = 'truesign ico pre connect to socket server ……';\n\t            console.log(this.data.status);\n\t        }\n\t    },\n\t    loopCheckStatus: function loopCheckStatus() {}\n\t};\n\texports.default = SOCKET_CLIENT;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ },\n\n/***/ 1376:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _socket_client = __webpack_require__(1312);\n\t\n\tvar _socket_client2 = _interopRequireDefault(_socket_client);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    mounted: function mounted() {\n\t        var vm = this;\n\t        this.$root.eventHub.$on('socket_response', function (data) {\n\t            console.log('socket_response', data);\n\t            vm.socket_response = data;\n\t        });\n\t        this.$root.eventHub.$on('conn_status', function (data) {\n\t            vm.conn_status = data;\n\t        });\n\t    },\n\t    data: function data() {\n\t        return {\n\t            conn_status: false,\n\t            yaf: {\n\t                module: 'index',\n\t                controller: 'index',\n\t                action: 'test'\n\t            },\n\t            socket_response: '...'\n\t        };\n\t    },\n\t\n\t    computed: {},\n\t    methods: {\n\t        socket_init: function socket_init() {\n\t            _socket_client2.default.data.this_vue = this;\n\t            _socket_client2.default.init();\n\t        },\n\t        disconnect: function disconnect() {\n\t\n\t            _socket_client2.default.wsClose();\n\t        },\n\t        send: function send() {\n\t            var vm = this;\n\t            var params = {\n\t                to: null,\n\t                payload_type: 'test',\n\t                payload_data: {},\n\t                yaf: this.yaf\n\t            };\n\t            _socket_client2.default.data.payload = params;\n\t            _socket_client2.default.wsSend();\n\t        }\n\t    }\n\t\n\t};\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/22.28829e4aefaa2082bf4a.js","/**\r\n * Created by ql-win on 2017/4/22.\r\n */\r\nexport function String2Blob(str) {\r\n    var blob = new Blob([str], {\r\n        type: 'text/plain'\r\n    });\r\n    return blob\r\n}\r\nexport function TypeArray2Blob(typearray) {\r\n    //将 TypeArray  转换成 Blob 对象\r\n    //var array = new Uint16Array([97, 32, 72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33]);\r\n    //测试成功\r\n    //var blob = new Blob([array], { type: \"application/octet-binary\" });\r\n    //测试成功\r\n    // var blob = new Blob([array]);\r\n    var blob = new Blob(typearray)\r\n    //将 Blob对象 读成字符串\r\n    var reader = new FileReader();\r\n    reader.readAsText(blob, 'utf-8');\r\n    reader.onload = function (e) {\r\n        console.info(reader.result); //a Hello world!\r\n        return reader.result\r\n    }\r\n}\r\nexport function Blob2String(blob) {\r\n//将字符串转换成 Blob对象\r\n//     var blob = new Blob(['中文字符串'], {\r\n//         type: 'text/plain'\r\n//     });\r\n//将Blob 对象转换成字符串\r\n    var reader = new FileReader();\r\n    reader.readAsText(blob, 'utf-8');\r\n    reader.onload = function (e) {\r\n        console.info(reader.result);\r\n        return reader.result\r\n    }\r\n}\r\n\r\nexport function Blob2ArrayBuffer(blob) {\r\n    // //将字符串转换成 Blob对象\r\n    // var blob = new Blob(['中文字符串'], {\r\n    //     type: 'text/plain'\r\n    // });\r\n//将Blob 对象转换成 ArrayBuffer\r\n    var reader = new FileReader();\r\n    reader.readAsArrayBuffer(blob);\r\n    reader.onload = function (e) {\r\n        console.info(reader.result); //ArrayBuffer {}\r\n        return reader.result\r\n        //经常会遇到的异常 Uncaught RangeError: byte length of Int16Array should be a multiple of 2\r\n        //var buf = new int16array(reader.result);\r\n        //console.info(buf);\r\n\r\n        // //将 ArrayBufferView  转换成Blob\r\n        // var buf = new Uint8Array(reader.result);\r\n        // console.info(buf); //[228, 184, 173, 230, 150, 135, 229, 173, 151, 231, 172, 166, 228, 184, 178]\r\n        // reader.readAsText(new Blob([buf]), 'utf-8');\r\n        // reader.onload = function () {\r\n        //     console.info(reader.result); //中文字符串\r\n        // };\r\n        //\r\n        // //将 ArrayBufferView  转换成Blob\r\n        // var buf = new DataView(reader.result);\r\n        // console.info(buf); //DataView {}\r\n        // reader.readAsText(new Blob([buf]), 'utf-8');\r\n        // reader.onload = function () {\r\n        //     console.info(reader.result); //中文字符串\r\n        // };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/lib/helper/javascriptDatatypeConvert.js","// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module !== 'undefined' && module.exports){\n        module.exports = factory();\n    } else {\n        global.ReconnectingWebSocket = factory();\n    }\n})(this, function () {\n\n    if (!('WebSocket' in window)) {\n        return;\n    }\n\n    function ReconnectingWebSocket(url, protocols, options) {\n\n        // Default settings\n        var settings = {\n\n            /** Whether this instance should log debug messages. */\n            debug: false,\n\n            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n            automaticOpen: true,\n\n            /** The number of milliseconds to delay before attempting to reconnect. */\n            reconnectInterval: 1000,\n            /** The maximum number of milliseconds to delay a reconnection attempt. */\n            maxReconnectInterval: 30000,\n            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n            reconnectDecay: 1.5,\n\n            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n            timeoutInterval: 2000,\n\n            /** The maximum number of reconnection attempts to make. Unlimited if null. */\n            maxReconnectAttempts: null\n        }\n        if (!options) { options = {}; }\n\n        // Overwrite and define settings with options if they exist.\n        for (var key in settings) {\n            if (typeof options[key] !== 'undefined') {\n                this[key] = options[key];\n            } else {\n                this[key] = settings[key];\n            }\n        }\n\n        // These should be treated as read-only properties\n\n        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n        this.url = url;\n\n        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n        this.reconnectAttempts = 0;\n\n        /**\n         * The current state of the connection.\n         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n         * Read only.\n         */\n        this.readyState = WebSocket.CONNECTING;\n\n        /**\n         * A string indicating the name of the sub-protocol the server selected; this will be one of\n         * the strings specified in the protocols parameter when creating the WebSocket object.\n         * Read only.\n         */\n        this.protocol = null;\n\n        // Private state variables\n\n        var self = this;\n        var ws;\n        var forcedClose = false;\n        var timedOut = false;\n        var eventTarget = document.createElement('div');\n\n        // Wire up \"on*\" properties as event handlers\n\n        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });\n        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });\n        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });\n        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });\n        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });\n\n        // Expose the API required by EventTarget\n\n        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);\n        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n        /**\n         * This function generates an event that is compatible with standard\n         * compliant browsers and IE9 - IE11\n         *\n         * This will prevent the error:\n         * Object doesn't support this action\n         *\n         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n         * @param s String The name that the event should use\n         * @param args Object an optional object that the event will use\n         */\n        function generateEvent(s, args) {\n        \tvar evt = document.createEvent(\"CustomEvent\");\n        \tevt.initCustomEvent(s, false, false, args);\n        \treturn evt;\n        };\n\n        this.open = function (reconnectAttempt) {\n            ws = new WebSocket(self.url, protocols || []);\n\n            if (reconnectAttempt) {\n                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {\n                    return;\n                }\n            } else {\n                eventTarget.dispatchEvent(generateEvent('connecting'));\n                this.reconnectAttempts = 0;\n            }\n\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);\n            }\n\n            var localWs = ws;\n            var timeout = setTimeout(function() {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);\n                }\n                timedOut = true;\n                localWs.close();\n                timedOut = false;\n            }, self.timeoutInterval);\n\n            ws.onopen = function(event) {\n                clearTimeout(timeout);\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onopen', self.url);\n                }\n                self.protocol = ws.protocol;\n                self.readyState = WebSocket.OPEN;\n                self.reconnectAttempts = 0;\n                var e = generateEvent('open');\n                e.isReconnect = reconnectAttempt;\n                reconnectAttempt = false;\n                eventTarget.dispatchEvent(e);\n            };\n\n            ws.onclose = function(event) {\n                clearTimeout(timeout);\n                ws = null;\n                if (forcedClose) {\n                    self.readyState = WebSocket.CLOSED;\n                    eventTarget.dispatchEvent(generateEvent('close'));\n                } else {\n                    self.readyState = WebSocket.CONNECTING;\n                    var e = generateEvent('connecting');\n                    e.code = event.code;\n                    e.reason = event.reason;\n                    e.wasClean = event.wasClean;\n                    eventTarget.dispatchEvent(e);\n                    if (!reconnectAttempt && !timedOut) {\n                        if (self.debug || ReconnectingWebSocket.debugAll) {\n                            console.debug('ReconnectingWebSocket', 'onclose', self.url);\n                        }\n                        eventTarget.dispatchEvent(generateEvent('close'));\n                    }\n\n                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);\n                    setTimeout(function() {\n                        self.reconnectAttempts++;\n                        self.open(true);\n                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);\n                }\n            };\n            ws.onmessage = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);\n                }\n                var e = generateEvent('message');\n                e.data = event.data;\n                eventTarget.dispatchEvent(e);\n            };\n            ws.onerror = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);\n                }\n                eventTarget.dispatchEvent(generateEvent('error'));\n            };\n        }\n\n        // Whether or not to create a websocket upon instantiation\n        if (this.automaticOpen == true) {\n            this.open(false);\n        }\n\n        /**\n         * Transmits data to the server over the WebSocket connection.\n         *\n         * @param data a text string, ArrayBuffer or Blob to send to the server.\n         */\n        this.send = function(data) {\n            if (ws) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'send', self.url, data);\n                }\n                return ws.send(data);\n            } else {\n                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n            }\n        };\n\n        /**\n         * Closes the WebSocket connection or connection attempt, if any.\n         * If the connection is already CLOSED, this method does nothing.\n         */\n        this.close = function(code, reason) {\n            // Default CLOSE_NORMAL code\n            if (typeof code == 'undefined') {\n                code = 1000;\n            }\n            forcedClose = true;\n            if (ws) {\n                ws.close(code, reason);\n            }\n        };\n\n        /**\n         * Additional public API method to refresh the connection if still open (close, re-open).\n         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n         */\n        this.refresh = function() {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }\n\n    /**\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n     * this indicates that the connection is ready to send and receive data.\n     */\n    ReconnectingWebSocket.prototype.onopen = function(event) {};\n    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n    ReconnectingWebSocket.prototype.onclose = function(event) {};\n    /** An event listener to be called when a connection begins being attempted. */\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n    /** An event listener to be called when a message is received from the server. */\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n    /** An event listener to be called when an error occurs. */\n    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n    /**\n     * Whether all instances of ReconnectingWebSocket should log debug messages.\n     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n     */\n    ReconnectingWebSocket.debugAll = false;\n\n    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n    ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n    return ReconnectingWebSocket;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/.1.0.0@reconnectingwebsocket/reconnecting-websocket.js\n// module id = 62\n// module chunks = 1 4 8 10 18 22","exports = module.exports = require(\"../../../node_modules/.0.25.0@css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"websocket.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.25.0@css-loader?sourceMap!./~/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!./~/.1.0.44@vux-loader/src/style-loader.js!./~/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./src/components/test/websocket.vue\n// module id = 584\n// module chunks = 22","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/.0.25.0@css-loader/index.js?sourceMap!../../../node_modules/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/style-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./websocket.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/.1.0.0@vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/.0.25.0@css-loader/index.js?sourceMap!../../../node_modules/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/style-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./websocket.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/.0.25.0@css-loader/index.js?sourceMap!../../../node_modules/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/style-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./websocket.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.1.0.1@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/.1.0.0@vue-style-loader!./~/.0.25.0@css-loader?sourceMap!./~/.10.3.0@vue-loader/lib/style-rewriter.js?id=data-v-18f80bb3!./~/.1.0.44@vux-loader/src/style-loader.js!./~/.10.3.0@vue-loader/lib/selector.js?type=styles&index=0!./src/components/test/websocket.vue\n// module id = 646\n// module chunks = 22","\n/* styles */\nrequire(\"!!../../../node_modules/.1.0.1@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../node_modules/.10.3.0@vue-loader/lib/style-rewriter?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/style-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector?type=styles&index=0!./websocket.vue\")\n\nvar Component = require(\"!../../../node_modules/.10.3.0@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.1.0.44@vux-loader/src/script-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector?type=script&index=0!./websocket.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.10.3.0@vue-loader/lib/template-compiler?id=data-v-18f80bb3!../../../node_modules/.1.0.44@vux-loader/src/template-loader.js!../../../node_modules/.10.3.0@vue-loader/lib/selector?type=template&index=0!./websocket.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/test/websocket.vue\n// module id = 776\n// module chunks = 22","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticStyle: {\n      \"text-align\": \"center\"\n    }\n  }, [_c('button', {\n    staticClass: \"btn btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.socket_init\n    }\n  }, [_vm._v(\"连接socket\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.disconnect\n    }\n  }, [_vm._v(\"断开socket\")]), _vm._v(\" \"), (_vm.conn_status) ? _c('input', {\n    attrs: {\n      \"value\": \"已经连接\"\n    }\n  }) : _c('input', {\n    attrs: {\n      \"value\": \"已经断开\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"width\": \"800px\",\n      \"height\": \"300px\",\n      \"margin-left\": \"50%\",\n      \"transform\": \"translateX(-50%)\"\n    }\n  }, [_c('label', {\n    attrs: {\n      \"for\": \"module\"\n    }\n  }, [_vm._v(\"module\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.yaf.module),\n      expression: \"yaf.module\"\n    }],\n    attrs: {\n      \"id\": \"module\"\n    },\n    domProps: {\n      \"value\": (_vm.yaf.module)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.yaf.module = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    attrs: {\n      \"for\": \"controller\"\n    }\n  }, [_vm._v(\"controller\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.yaf.controller),\n      expression: \"yaf.controller\"\n    }],\n    attrs: {\n      \"id\": \"controller\"\n    },\n    domProps: {\n      \"value\": (_vm.yaf.controller)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.yaf.controller = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    attrs: {\n      \"for\": \"action\"\n    }\n  }, [_vm._v(\"action\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.yaf.action),\n      expression: \"yaf.action\"\n    }],\n    attrs: {\n      \"id\": \"action\"\n    },\n    domProps: {\n      \"value\": (_vm.yaf.action)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.yaf.action = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('input', {\n    attrs: {\n      \"id\": \"send\",\n      \"value\": \"提交\",\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.send\n    }\n  })]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"width\": \"800px\",\n      \"height\": \"300px\",\n      \"margin-left\": \"50%\",\n      \"transform\": \"translateX(-50%)\"\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.socket_response) + \"\\n    \")])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.10.3.0@vue-loader/lib/template-compiler.js?id=data-v-18f80bb3!./~/.1.0.44@vux-loader/src/template-loader.js!./~/.10.3.0@vue-loader/lib/selector.js?type=template&index=0!./src/components/test/websocket.vue\n// module id = 832\n// module chunks = 22","import { String2Blob } from './lib/helper/javascriptDatatypeConvert'\r\nimport reconnectingwebsocket from 'reconnectingwebsocket'\r\nconst SOCKET_CLIENT  =  {\r\n    data : {\r\n        wSock       : null,\r\n        to       : '',\r\n        message        : null,\r\n        payload:null,\r\n        wsserver    : 'ws://iamsee.com:9501',\r\n        response : '',\r\n        this_vue : null,\r\n        conn_status : false,\r\n        status:'暂未连接到服务器',\r\n        check_socket_status:'',\r\n    },\r\n    init : function (unique_auth_code=0){\r\n        this.copyright();\r\n        if(!this.data.conn_status){\r\n            this.ws(unique_auth_code);\r\n        }\r\n\r\n\r\n    },\r\n\r\n    ws : function(unique_auth_code){\r\n\r\n        console.log('准备连接到服务器=>')\r\n        clearInterval(this.data.check_socket_status)\r\n        // this.data.wSock  =  new WebSocket('ws://iamsee.com:9501/?unique_auth_code='+unique_auth_code);\r\n        this.data.wSock  =  new reconnectingwebsocket('ws://iamsee.com:9501/?unique_auth_code='+unique_auth_code);\r\n        this.wsOpen();\r\n        this.wsMessage();\r\n        this.wsOnclose();\r\n        this.wsOnerror();\r\n        if(unique_auth_code){\r\n            // this.loopCheckStatus()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n    wsSend : function(){\r\n\r\n        // console.log('send=>')\r\n        // console.log(JSON.stringify(this.data.payload))\r\n        var send_blob = String2Blob(JSON.stringify(this.data.payload))\r\n        // console.log('this.data.wSock',this.data.wSock)\r\n        this.data.wSock.send(send_blob);\r\n\r\n    },\r\n    wsClose : function () {\r\n\r\n        console.log('关闭连接')\r\n        this.data.wSock.close();\r\n\r\n\r\n    },\r\n    wsOpen : function (){\r\n        let that = this\r\n        this.data.wSock.onopen  =  function( event ){\r\n            that.data.status = '连接正常'\r\n            that.data.conn_status = true\r\n            SOCKET_CLIENT.print('wsopen',event);\r\n            that.data.this_vue.$root.eventHub.$emit('conn_status',that.data.conn_status)\r\n        }\r\n    },\r\n    wsMessage : function(){\r\n\r\n        let that = this\r\n        this.data.wSock.onmessage = function(event){\r\n            var reader = new FileReader();\r\n            reader.readAsText(event.data, 'utf-8');\r\n            reader.onload = function (e) {\r\n                event.datastr = reader.result\r\n                var response_data  =  jQuery.parseJSON(event.datastr);\r\n                let status = response_data.status\r\n                let type = response_data.type\r\n                // console.log('...............'+type+'...............')\r\n                that.data.this_vue.$root.eventHub.$emit('socket_response',response_data)\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n    wsOnclose : function(){\r\n        let that = this\r\n\r\n        this.data.wSock.onclose  =  function(event){\r\n            console.log('[c]close=>');\r\n            console.log(event)\r\n            that.data.conn_status = false\r\n            that.data.this_vue.$root.eventHub.$emit('conn_status',that.data.conn_status)\r\n\r\n            // if(event.type === 'close'){\r\n            //     // that.data.wSock = null\r\n            // }\r\n            // if(that.data.wSock){\r\n            //     console.log('关闭失败')\r\n            // }\r\n            // else{\r\n            //     that.data.status = '连接关闭'\r\n            //     console.log('关闭成功')\r\n            //     that.data.this_vue.$root.eventHub.$emit('socket_close',1)\r\n            //\r\n            //\r\n            //\r\n            //\r\n            // }\r\n        }\r\n    },\r\n    wsOnerror : function(){\r\n        this.data.wSock.onerror  =  function(event){\r\n            console.log('[c]error=>');\r\n            console.log(event);\r\n        }\r\n    },\r\n\r\n    print:function(flag,obj){\r\n        console.log('----'  +  flag  +  ' start-------');\r\n        console.log(obj);\r\n        console.log('----'  +  flag  +  ' end-------');\r\n    },\r\n    copyright:function(){\r\n        if(this.data.status !== '连接正常'){\r\n            this.data.status = 'truesign ico pre connect to socket server ……'\r\n            console.log(this.data.status);\r\n        }\r\n    },\r\n    loopCheckStatus:function () {\r\n        // var that = this\r\n        // if(check_socket_status){\r\n        //     clearInterval(check_socket_status)\r\n        // }\r\n        //\r\n        // var check_socket_status = setInterval(function () {\r\n        //     console.log('loopCheckStatus')\r\n        //     console.log('that.data.wSock.readyState',that.data.wSock.readyState)\r\n            // that.data.this_vue.$root.eventHub.$emit('check_level',1)\r\n            // if(!that.data.wSock){\r\n            //     // console.log('socket_error->','未连接')\r\n            //     that.data.this_vue.$root.eventHub.$emit('socket_error','未连接')\r\n            // }\r\n            // else if(that.data.wSock.readyState != 1){\r\n            //     // console.log('socket_error->',that.data.wSock.readyState)\r\n            //     that.data.this_vue.$root.eventHub.$emit('socket_error',that.data.wSock.readyState)\r\n            //     that.data.wSock = ''\r\n            //\r\n            // }\r\n            // else{\r\n            //     // console.log('socket_status->',that.data.wSock.readyState)\r\n            //     that.data.this_vue.$root.eventHub.$emit('socket_error',that.data.wSock.readyState)\r\n            // }\r\n        // },3000)\r\n        // this.data.check_socket_status = check_socket_status\r\n    }\r\n}\r\nexport  default  SOCKET_CLIENT\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/socket_client.js","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SOCKET_CLIENT from '../../api/socket_client'\n\nexport default {\n    mounted () {\n        var vm = this\n        this.$root.eventHub.$on('socket_response',function (data) {\n            console.log('socket_response',data)\n            vm.socket_response = data\n        })\n        this.$root.eventHub.$on('conn_status',function (data) {\n            vm.conn_status = data\n\n        })\n    },\n    data () {\n        return {\n            conn_status:false,\n            yaf:{\n                module:'index',\n                controller:'index',\n                action:'test'\n            },\n            socket_response:'...'\n        }\n    },\n    computed: {\n\n    },\n    methods: {\n\n        socket_init()  {\n            SOCKET_CLIENT.data.this_vue = this\n            SOCKET_CLIENT.init()\n\n        },\n        disconnect() {\n\n            SOCKET_CLIENT.wsClose()\n\n        },\n        send(){\n            var vm = this\n            var params = {\n                to:null,\n                payload_type:'test',\n                payload_data:{},\n                yaf:this.yaf\n            }\n            SOCKET_CLIENT.data.payload = params\n            SOCKET_CLIENT.wsSend()\n        }\n\n\n    },\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/test/websocket.vue"],"sourceRoot":""}