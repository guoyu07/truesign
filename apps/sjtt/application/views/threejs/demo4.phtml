<!DOCTYPE html>
<html>
<head>
    <meta charset=utf-8 />
    <title>webgl2</title>
    <style>
        html, body {
            height: 100%;
        }

        body {
            background-color: #000000;
            margin: 0;
            font-family: Helvetica, sans-serif;;
            overflow: hidden;
        }

        a {
            color: #ffffff;
        }

        #info {
            position: absolute;
            width: 100%;
            color: #ffffff;
            padding: 5px;
            font-family: Monospace;
            font-size: 13px;
            font-weight: bold;
            text-align: center;
            z-index: 1;
        }

        #menu {
            position: absolute;
            bottom: 20px;
            width: 100%;
            text-align: center;
        }

        .element {
            width: 120px;
            height: 160px;
            box-shadow: 0px 0px 12px rgba(0,255,255,0.5);
            border: 1px solid rgba(127,255,255,0.25);
            text-align: center;
            cursor: default;
        }

        .element:hover {
            box-shadow: 0px 0px 12px rgba(0,255,255,0.75);
            border: 1px solid rgba(127,255,255,0.75);
        }

        .element .number {
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 12px;
            color: rgba(127,255,255,0.75);
        }

        .element .symbol {
            position: absolute;
            top: 40px;
            left: 0px;
            right: 0px;
            font-size: 60px;
            font-weight: bold;
            color: rgba(255,255,255,0.75);
            text-shadow: 0 0 10px rgba(0,255,255,0.95);
        }

        .element .details {
            position: absolute;
            bottom: 15px;
            left: 0px;
            right: 0px;
            font-size: 12px;
            color: rgba(127,255,255,0.75);
        }

        button {
            color: rgba(127,255,255,0.75);
            background: transparent;
            outline: 1px solid rgba(127,255,255,0.75);
            border: 0px;
            padding: 5px 10px;
            cursor: pointer;
        }
        button:hover {
            background-color: rgba(0,255,255,0.5);
        }
        button:active {
            color: #000000;
            background-color: rgba(0,255,255,0.75);
        }
    </style>

    <script src="/public/bower_components/three.js/build/three.js" type="text/javascript"></script>
    <script src="/public/bower_components/three.js/examples/js/libs/tween.min.js" type="text/javascript"></script>
    <script src="/public/bower_components/three.js/examples/js/controls/TrackballControls.js" type="text/javascript"></script>
    <script src="/public/bower_components/three.js/examples/js/renderers/CSS3DRenderer.js" type="text/javascript"></script>

</head>
<body>

<div id="container"></div>

<script>

    var camera, sceneGl, rendererGl;
    var sceneCss, rendererCss;
    var controls;

    init();
    animate();


    function init() {

        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);
        camera.position.set(200, 200, 200);

        controls = new THREE.TrackballControls(camera);

        sceneGl = new THREE.Scene();
        sceneCss = new THREE.Scene();

        var material = new THREE.MeshBasicMaterial({
            color: 0x000000,
            opacity: 0.0,
            side: THREE.DoubleSide
        });

        var xpos = [50, -10, 30, 70, 110];
        var ypos = [60, -40, 0, 40, 80];
        var zpos = [-30, -50, 0, 50, 100];

        for (var i = 0; i < 5; i++) {

            var element = document.createElement('div');
            element.style.width = '100px';
            element.style.height = '100px';
            element.style.opacity = 1.0;
            element.style.background = new THREE.Color(Math.random() * 0xff0000).getStyle();

            var object = new THREE.CSS3DObject(element);
            object.position.x = xpos[i];
            object.position.y = ypos[i];
            object.position.z = zpos[i];
            object.rotation.x = Math.PI / (i + 5);
            object.rotation.y = Math.PI / (21 - 2 * i);
            object.rotation.z = Math.PI / (3 * i + 25);
            object.scale.x = i / 12 + 0.5;
            object.scale.y = 1 / (12 - i) + 0.5;
            sceneCss.add(object);


            var geometry = new THREE.PlaneGeometry(100, 100);
            var mesh = new THREE.Mesh(geometry, material);
            mesh.position.copy(object.position);
            mesh.rotation.copy(object.rotation);
            mesh.scale.copy(object.scale);
            sceneGl.add(mesh);

        }


        var boxGeom = new THREE.CubeGeometry(60, 60, 60);

        var cubeMaterial = new THREE.MeshBasicMaterial({
            color: 0x5CC9F5,
            shading: THREE.FlatShading,
            side: THREE.DoubleSide
        });

        var cube = new THREE.Mesh(boxGeom, cubeMaterial);
        cube.position.copy(new THREE.Vector3(100, 75, 50));
        cube.rotation.copy(Math.PI / 6);

        sceneGl.add(cube);

        var axes = new THREE.AxisHelper(20);
        sceneGl.add(axes);

        rendererCss = new THREE.CSS3DRenderer();
        rendererCss.setSize(window.innerWidth, window.innerHeight);
        rendererCss.domElement.style.position = 'absolute';
        rendererCss.domElement.style.top = 0;

        rendererGl = new THREE.WebGLRenderer({alpha:true});
//        rendererGl.setClearColor(0x00ff00, 0.0);
        rendererGl.setClearColor(new THREE.Color(0xEEEEEE));

        rendererGl.setSize(window.innerWidth, window.innerHeight);

        rendererGl.domElement.style.position = 'absolute';
        rendererGl.domElement.style.zIndex = 1;
        rendererGl.domElement.style.top = 0;

        rendererCss.domElement.appendChild(rendererGl.domElement);

        document.body.appendChild(rendererCss.domElement);

    }

    function animate() {

        requestAnimationFrame(animate);

        controls.update();

        rendererGl.render(sceneGl, camera);
        rendererCss.render(sceneCss, camera);

    }
</script>
</body>

</html>
